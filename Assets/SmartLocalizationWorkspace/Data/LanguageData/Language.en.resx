<?xml version="1.0" encoding="utf-8"?>
<root><!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="AdsButton" xml:space="preserve">
		<value>Play Ads</value>
	</data>
	<data name="Delicious" xml:space="preserve">
		<value>Delicious!</value>
	</data>
	<data name="level_1" xml:space="preserve">
		<value>Tap only edible mushrooms</value>
	</data>
	<data name="level_10" xml:space="preserve">
		<value>Pale toadstool poison Fungi</value>
	</data>
	<data name="level_11" xml:space="preserve">
		<value>Good snail fat snail</value>
	</data>
	<data name="level_12" xml:space="preserve">
		<value>Pale toadstool green Amanita</value>
	</data>
	<data name="level_13" xml:space="preserve">
		<value>Mushroom soup is hearty</value>
	</data>
	<data name="level_14" xml:space="preserve">
		<value>Russian eat mushrooms</value>
	</data>
	<data name="level_15" xml:space="preserve">
		<value>Fungi older than dinosaurs</value>
	</data>
	<data name="level_16" xml:space="preserve">
		<value>In Ryazan mushrooms with eyes</value>
	</data>
	<data name="level_17" xml:space="preserve">
		<value>Fly agaric can waiting you</value>
	</data>
	<data name="level_18" xml:space="preserve">
		<value>Pizza without Fungi - waste of money</value>
	</data>
	<data name="level_19" xml:space="preserve">
		<value>Crawl Snail, Crawl!</value>
	</data>
	<data name="level_2" xml:space="preserve">
		<value>Champignon for Champions</value>
	</data>
	<data name="level_20" xml:space="preserve">
		<value>Are you still here?</value>
	</data>
	<data name="level_21" xml:space="preserve">
		<value>Do you Love mushrooms?</value>
	</data>
	<data name="level_22" xml:space="preserve">
		<value>Enough to eat the mushrooms</value>
	</data>
	<data name="level_23" xml:space="preserve">
		<value>They don't like this</value>
	</data>
	<data name="level_24" xml:space="preserve">
		<value>Simon the snail, stop it</value>
	</data>
	<data name="level_25" xml:space="preserve">
		<value>Belly full of mushrooms</value>
	</data>
	<data name="level_26" xml:space="preserve">
		<value>They like night and shadow</value>
	</data>
	<data name="level_27" xml:space="preserve">
		<value>Shout - mushrooms scare</value>
	</data>
	<data name="level_28" xml:space="preserve">
		<value>Mushroom old, but root fresh</value>
	</data>
	<data name="level_29" xml:space="preserve">
		<value>The Kingdom of Fungi</value>
	</data>
	<data name="level_3" xml:space="preserve">
		<value>Flies dies from Amanita</value>
	</data>
	<data name="level_30" xml:space="preserve">
		<value>Will rain - will be mushrooms</value>
	</data>
	<data name="level_31" xml:space="preserve">
		<value>Love mushrooms like Mario</value>
	</data>
	<data name="level_32" xml:space="preserve">
		<value>Look in forest, not store</value>
	</data>
	<data name="level_33" xml:space="preserve">
		<value>Mushrooms for Breakfast</value>
	</data>
	<data name="level_34" xml:space="preserve">
		<value>Fungi jumping</value>
	</data>
	<data name="level_35" xml:space="preserve">
		<value>Mushroom circle</value>
	</data>
	<data name="level_36" xml:space="preserve">
		<value>Elf Mushrooms</value>
	</data>
	<data name="level_37" xml:space="preserve">
		<value>Simon snail</value>
	</data>
	<data name="level_38" xml:space="preserve">
		<value>Master snail</value>
	</data>
	<data name="level_39" xml:space="preserve">
		<value>Ninja snail</value>
	</data>
	<data name="level_4" xml:space="preserve">
		<value>Berserker and toadstools</value>
	</data>
	<data name="level_40" xml:space="preserve">
		<value>Fuji snail</value>
	</data>
	<data name="level_5" xml:space="preserve">
		<value>Chanterelle little fox</value>
	</data>
	<data name="level_6" xml:space="preserve">
		<value>One side will make you grow taller</value>
	</data>
	<data name="level_7" xml:space="preserve">
		<value>Other side will make you grow shorter</value>
	</data>
	<data name="level_8" xml:space="preserve">
		<value>Hygrophoropsis aurantiaca - fake</value>
	</data>
	<data name="level_9" xml:space="preserve">
		<value>Inflamed eyes? eat Fox</value>
	</data>
	<data name="mushroom_0" xml:space="preserve">
		<value>Button mushroom</value>
	</data>
	<data name="mushroom_1" xml:space="preserve">
		<value>Amanita</value>
	</data>
	<data name="mushroom_2" xml:space="preserve">
		<value>Chanterelle</value>
	</data>
	<data name="mushroom_3" xml:space="preserve">
		<value>Death cup</value>
	</data>
	<data name="mushroom_4" xml:space="preserve">
		<value>Honey fungus</value>
	</data>
	<data name="mushroom_5" xml:space="preserve">
		<value>Ink cap</value>
	</data>
	<data name="mushroom_6" xml:space="preserve">
		<value>Milky cup</value>
	</data>
	<data name="mushroom_7" xml:space="preserve">
		<value>Inocybe</value>
	</data>
	<data name="mushroom_8" xml:space="preserve">
		<value>Penny bun</value>
	</data>
	<data name="mushroom_9" xml:space="preserve">
		<value>Gyromitra</value>
	</data>
	<data name="RateSec" xml:space="preserve">
		<value>Rate {0:#0.000} /sec</value>
	</data>
	<data name="TheSimonSnail" xml:space="preserve">
		<value>The Simon Snail</value>
	</data>
	<data name="Total" xml:space="preserve">
		<value>Total {0}</value>
	</data>
	<data name="TotalSec" xml:space="preserve">
		<value>{0:#0.#}/sec</value>
	</data>
	<data name="WaitSec" xml:space="preserve">
		<value>Wait {0:#0} sec</value>
	</data>
	<data name="YouWin" xml:space="preserve">
		<value>You Win!</value>
	</data>
</root>